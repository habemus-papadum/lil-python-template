# {{ package_name }}

[![CI](https://github.com/{{ github_username }}/{{ package_name }}/actions/workflows/ci.yml/badge.svg)](https://github.com/{{ github_username }}/{{ package_name }}/actions/workflows/ci.yml)
{%- if include_docs %}
[![Documentation](https://img.shields.io/badge/Documentation-blue.svg)](https://{{ github_username }}.github.io/{{ package_name }}/)
{%- endif %}
[![PyPI](https://img.shields.io/pypi/v/{{ package_name }}.svg)](https://pypi.org/project/{{ package_name }}/)
[![Python {{ python_version }}+](https://img.shields.io/badge/python-{{ python_version }}+-blue.svg)](https://www.python.org/downloads/)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Code style: ruff](https://img.shields.io/badge/code%20style-ruff-000000.svg)](https://github.com/astral-sh/ruff)

{{ package_description }}

## Installation

Install using pip:

```bash
pip install {{ package_name }}
```

Or using uv:

```bash
uv pip install {{ package_name }}
```

## Development

This project uses [UV](https://docs.astral.sh/uv/) for dependency management.

### Setup

```bash
# Install UV if you haven't already
curl -LsSf https://astral.sh/uv/install.sh | sh

# Clone the repository
git clone https://github.com/{{ github_username }}/{{ package_name }}.git
cd {{ package_name }}

# Create a virtual environment and install dependencies (including dev dependencies)
uv sync --frozen
{%- if include_docs %}

# Or install with all optional dependencies
uv sync --frozen --all-extras
{%- endif %}
```

**Important for Development**:
- Use `uv sync --frozen` to ensure the lockfile is used without modification, maintaining reproducible builds
{%- if include_docs %}
- The `--all-extras` flag installs optional dependencies if your package defines any
{%- endif %}

### Running Tests

```bash
# Run all tests
uv run pytest

# Run a specific test file
uv run pytest tests/test_example.py

# Run a specific test function
uv run pytest tests/test_example.py::test_version

# Run tests with coverage
uv run pytest --cov=src/{{ package_slug }} --cov-report=xml --cov-report=term
```

### Code Quality

```bash
# Check code with ruff
uv run ruff check .

# Format code with ruff
uv run ruff format .

# Fix auto-fixable issues
uv run ruff check --fix .
```
{%- if include_docs %}

### Documentation

```bash
# Serve documentation locally (auto-reloads on changes)
uv run mkdocs serve

# Build documentation
uv run mkdocs build

# Test demo notebooks (if you have notebooks in docs/demos/)
./test_notebooks.sh
```

**Important**: After making any changes to demo notebooks, run `./test_notebooks.sh` to verify they execute without errors.
{%- endif %}

### Building

```bash
# Build distribution packages
uv build
```

### Publishing

```bash
# Build and publish to PyPI (requires credentials)
./publish.sh
```

## License

MIT License - see LICENSE file for details.
