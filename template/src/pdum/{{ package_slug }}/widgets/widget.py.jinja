"""Data structures for the placeholder widget."""

from __future__ import annotations

from dataclasses import dataclass, field
from typing import Any


@dataclass
class Widget:
    """Minimal payload describing a widget render."""

    title: str = "{{ package_name }}"
    body: str = "Version: 0.1.0-alpha"
    metadata: dict[str, Any] = field(default_factory=dict)

    def to_payload(self) -> dict[str, Any]:
        """Convert widget to a JSON-serializable payload."""

        return {
            "title": self.title,
            "body": self.body,
            "metadata": self.metadata,
        }

    def _repr_html_(self) -> str:
        """Return HTML representation for Jupyter notebook display.

        Note: This assumes setup_notebook() has already been called to inject
        the widget JavaScript bundle.
        """
        from .renderer import render_widget_html

        return render_widget_html(self)
