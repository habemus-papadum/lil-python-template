import type { WidgetPayload } from './types';

const TEMPLATE_ID = 'pdum-{{ package_slug | replace('_', '-') }}-widget-template';
const WIDGET_CLASS = 'pdum-{{ package_slug | replace('_', '-') }}-widget';
const TITLE_CLASS = 'pdum-{{ package_slug | replace('_', '-') }}-widget__title';
const BODY_CLASS = 'pdum-{{ package_slug | replace('_', '-') }}-widget__body';

function ensureTemplate() {
  if (document.getElementById(TEMPLATE_ID)) {
    return;
  }

  const template = document.createElement('template');
  template.id = TEMPLATE_ID;
  template.innerHTML = `
    <div class="${WIDGET_CLASS}">
      <h3 class="${TITLE_CLASS}"></h3>
      <pre class="${BODY_CLASS}"></pre>
    </div>
  `;
  document.body.appendChild(template);
}

export function renderWidget(element: HTMLElement, payload: WidgetPayload) {
  ensureTemplate();

  const template = document.getElementById(TEMPLATE_ID) as HTMLTemplateElement;
  const clone = template.content.cloneNode(true) as DocumentFragment;

  const container = clone.querySelector(`.${WIDGET_CLASS}`) as HTMLElement;
  const title = clone.querySelector(`.${TITLE_CLASS}`) as HTMLElement;
  const body = clone.querySelector(`.${BODY_CLASS}`) as HTMLElement;

  title.textContent = payload.title ?? 'Widget Preview';
  body.textContent = payload.body ?? 'No data provided.';

  element.innerHTML = '';
  element.appendChild(clone);

  if (payload.metadata) {
    container.dataset.metadata = JSON.stringify(payload.metadata);
  }
}
